@model ProjectAlpha.Models.StudentAchievementDetail

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>GetOtherDetails</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <link rel="icon" type="image/png" href="~/Content/Image/Icons/form.ico" />
    <link href="~/Content/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href="~/Content/lib/font-awesome/css/animations.css" rel="stylesheet" />
    <link href="~/Content/StyleSheet/StudentAchievementDetail/AchievementDetail.css" rel="stylesheet" />

 
</head>
<body>
    @Html.Partial("~/Views/PartialViews/_INavBar.cshtml");



    <div class="container" style="margin-top:60px">
        @using (Html.BeginForm("StudentAchievementDetails", "Registration", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2 style="font-family:cursive;color:#4285F4">Other Details</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="form-group">
                    @Html.LabelFor(model => model.AcademicExcellence, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        @Html.EditorFor(model => model.AcademicExcellence, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Any Academic Excellence" } })
                        @Html.ValidationMessageFor(model => model.AcademicExcellence, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Achievements, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        @Html.EditorFor(model => model.Achievements, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Achievements ex NSS, NCC" } })
                        @Html.ValidationMessageFor(model => model.Achievements, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        @Html.EditorFor(model => model.Hobbies, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Hobbies" } })
                        @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Skills" } })
                        @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                    </div>
                </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-5" })
                    @* <div class="col-md-offset-5">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>*@
                    <div class="col-md-offset-5">
                        @Html.DropDownListFor(a => a.Title, new List<SelectListItem>
                        {
                        new SelectListItem{Text="AADHAR CARD",Value="AadharCard"},
                        new SelectListItem{Text="INCOME CERTIFICATE",Value="IncomeCert"},
                        new SelectListItem{Text="PAN CARD",Value="Pan Card"} }, "Select Proof Of Document", new { @class = "btn btn-primary dropdown-toggle" })
                        @Html.ValidationMessageFor(a => a.Title, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <input type="file" name="ImageFile" required />
                        <br />
                        <p><em style="color:red">* </em>upload the proof of document only in image format</p>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-offset-5">
                        <input type="submit" value="Submit" class="btn btn-default btn-primary pull-right" />
                    </div>
                </div>
            </div>
        }
    </div>


</body>
</html>
