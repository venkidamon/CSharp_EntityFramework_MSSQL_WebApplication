@model ProjectAlpha.Models.StudentPersonalDetail

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Personal Details</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
    <link href="~/Content/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="~/Content/Image/Icons/form.ico" />
    <link href="~/Content/lib/font-awesome/css/animations.css" rel="stylesheet" />
    <link href="~/Content/StyleSheet/StudentPersonalDetail/PersonalDetail.css" rel="stylesheet" />
</head>


<body>

    @Html.Partial("~/Views/PartialViews/_INavBar.cshtml");


    <div class="container" style="margin-top:60px">
        @using (Html.BeginForm("StudentPersonalDetails", "Registration", FormMethod.Post, new
        {
            enctype = "multipart/form-data"
        }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2 style="font-family:cursive;color:#4285F4">Personal Details</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group margin-bottom-sm">
                            <span class="input-group-addon"><i class="fas fa-male"></i></span>
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Full Name" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fas fa-calendar-week"></i></span>


                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "span2 form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })

                        </div>

                    </div>
                </div>

                @* <div class="form-group">
                        @Html.LabelFor(model => model.PlaceOfBirth, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-offset-5">
                            <div class="input-group">

                                <span class="input-group-addon"><i class="fas fa-map-marker-alt"></i></span>

                                @Html.EditorFor(model => model.PlaceOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PlaceOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fab fa-canadian-maple-leaf"></i></span>

                            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Age" } })
                            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">




                            <div class="radio-inline">@Html.RadioButtonFor(p => p.Gender, "Male") Male</div>
                            <div class="radio-inline">@Html.RadioButtonFor(p => p.Gender, "Female") Female</div>
                            @Html.ValidationMessageFor(model => model.Gender, " ", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-map-marker-alt"></i></span>

                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Address" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-map-pin"></i></span>

                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your State" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="far fa-flag"></i></span>

                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Nationality" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-phone"></i></span>

                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter Your Mobile Number" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DependentName, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-network-wired"></i></span>

                            @Html.EditorFor(model => model.DependentName, new { htmlAttributes = new { autocomplete = "off", @class = "form-control", placeholder = "Enter The Dependent Name" } })
                            @Html.ValidationMessageFor(model => model.DependentName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DependentOccupation, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-wallet"></i></span>

                            @Html.EditorFor(model => model.DependentOccupation, new { autocomplete = "off", htmlAttributes = new { @class = "form-control", placeholder = "Enter The Dependent Occupation" } })
                            @Html.ValidationMessageFor(model => model.DependentOccupation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AnnualIncome, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <div class="input-group">

                            <span class="input-group-addon"><i class="fas fa-rupee-sign"></i></span>

                            @Html.EditorFor(model => model.AnnualIncome, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Your Annual Income" } })
                            @Html.ValidationMessageFor(model => model.AnnualIncome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-offset-5">
                        <input type="file" name="ImageFile" required />

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="reset" class="btn btn-danger pull-left" style="margin-left:279px;">Clear <i class="fa fa-remove"></i></button>

                        <button type="submit" class="btn btn-primary pull-right">Next <i class="fas fa-arrow-right"></i></button>
                    </div>
                </div>
            </div>

        }

    </div>

</body>
</html>
